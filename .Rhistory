tabPanel("Mission 2", value = "mission2"),
tabPanel("Data Source", value = "data_source")
)
),
# Sidebar with menu items matching the tabs
dashboardSidebar(
sidebarMenu(
id = "tabs", # Sidebar ID for tracking
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
),
# Dashboard Body with tab content
dashboardBody(
tabItems(
tabItem(tabName = "home",
h2("Welcome to the Home Page"),
p("This is the content of the Home page.")
),
tabItem(tabName = "mission1",
h2("Mission 1 Overview"),
p("This is the content for Mission 1."),
tabsetPanel(
tabPanel("Poverty Incidence", h3("Poverty Incidence content")),
tabPanel("Core Housing Need", h3("Core Housing Need content"))
)
),
tabItem(tabName = "mission2",
h2("Mission 2 Overview"),
p("This is the content for Mission 2."),
tabsetPanel(
tabPanel("New Business Openings", h3("New Business Openings content")),
tabPanel("Housing Availability", h3("Housing Availability content"))
)
),
tabItem(tabName = "data_source",
h2("Data Source"),
p("This is the content of the Data Source page.")
)
)
)
)
library(shiny)
library(shinydashboard)
# Define UI
ui <- dashboardPage(
dashboardHeader(
title = "BC Economic Dashboard",
navbarPage(
title = NULL, # Title already in the header
id = "navtabs", # ID for tracking navigation
tabPanel("Home", value = "home"),
tabPanel("Mission 1", value = "mission1"),
tabPanel("Mission 2", value = "mission2"),
tabPanel("Data Source", value = "data_source")
)
),
# Sidebar with menu items matching the tabs
dashboardSidebar(
sidebarMenu(
id = "tabs", # Sidebar ID for tracking
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
),
# Dashboard Body with tab content
dashboardBody(
tabItems(
tabItem(tabName = "home",
h2("Welcome to the Home Page"),
p("This is the content of the Home page.")
),
tabItem(tabName = "mission1",
h2("Mission 1 Overview"),
p("This is the content for Mission 1."),
tabsetPanel(
tabPanel("Poverty Incidence", h3("Poverty Incidence content")),
tabPanel("Core Housing Need", h3("Core Housing Need content"))
)
),
tabItem(tabName = "mission2",
h2("Mission 2 Overview"),
p("This is the content for Mission 2."),
tabsetPanel(
tabPanel("New Business Openings", h3("New Business Openings content")),
tabPanel("Housing Availability", h3("Housing Availability content"))
)
),
tabItem(tabName = "data_source",
h2("Data Source"),
p("This is the content of the Data Source page.")
)
)
)
)
library(shiny)
library(shinydashboard)
# Define UI
ui <- navbarPage(
title = "BC Economic Dashboard",
id = "navtabs",  # Navigation ID for tracking
# Home tab
tabPanel("Home",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Welcome to the Home Page"),
p("This is the content of the Home page.")
)
)
),
# Mission 1 tab
tabPanel("Mission 1",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Mission 1 Overview"),
p("This is the content for Mission 1."),
tabsetPanel(
tabPanel("Poverty Incidence", h3("Poverty Incidence content")),
tabPanel("Core Housing Need", h3("Core Housing Need content"))
)
)
)
),
# Mission 2 tab
tabPanel("Mission 2",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Mission 2 Overview"),
p("This is the content for Mission 2."),
tabsetPanel(
tabPanel("New Business Openings", h3("New Business Openings content")),
tabPanel("Housing Availability", h3("Housing Availability content"))
)
)
)
),
# Data Source tab
tabPanel("Data Source",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Data Source"),
p("This is the content of the Data Source page.")
)
)
)
)
# Define server logic
server <- function(input, output, session) {
# No specific server logic needed for this layout
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
# Define UI
ui <- navbarPage(
title = "BC Economic Dashboard",
id = "navtabs",  # Navigation ID for tracking
# Home tab
tabPanel("Home",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Welcome to the Home Page"),
p("This is the content of the Home page.")
)
)
),
# Mission 1 tab
tabPanel("Mission 1",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Mission 1 Overview"),
p("This is the content for Mission 1."),
tabsetPanel(
tabPanel("Poverty Incidence", h3("Poverty Incidence content")),
tabPanel("Core Housing Need", h3("Core Housing Need content"))
)
)
)
),
# Mission 2 tab
tabPanel("Mission 2",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Mission 2 Overview"),
p("This is the content for Mission 2."),
tabsetPanel(
tabPanel("New Business Openings", h3("New Business Openings content")),
tabPanel("Housing Availability", h3("Housing Availability content"))
)
)
)
),
# Data Source tab
tabPanel("Data Source",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Data Source"),
p("This is the content of the Data Source page.")
)
)
)
)
# Define server logic
server <- function(input, output, session) {
# No specific server logic needed for this layout
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
library(shiny)
library(shinydashboard)
# Define UI
ui <- navbarPage(
title = "BC Economic Dashboard",
id = "navtabs",  # Navigation ID for tracking
# Home tab
tabPanel("Home",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Welcome to the Home Page"),
p("This is the content of the Home page.")
)
)
),
# Mission 1 tab
tabPanel("Mission 1",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Mission 1 Overview"),
p("This is the content for Mission 1."),
tabsetPanel(
tabPanel("Poverty Incidence", h3("Poverty Incidence content")),
tabPanel("Core Housing Need", h3("Core Housing Need content"))
)
)
)
),
# Mission 2 tab
tabPanel("Mission 2",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Mission 2 Overview"),
p("This is the content for Mission 2."),
tabsetPanel(
tabPanel("New Business Openings", h3("New Business Openings content")),
tabPanel("Housing Availability", h3("Housing Availability content"))
)
)
)
),
# Data Source tab
tabPanel("Data Source",
fluidRow(
column(3,
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("home")),
menuItem("Mission 1", tabName = "mission1", icon = icon("bullseye")),
menuItem("Mission 2", tabName = "mission2", icon = icon("bullseye")),
menuItem("Data Source", tabName = "data_source", icon = icon("database"))
)
)),
column(9,
h2("Data Source"),
p("This is the content of the Data Source page.")
)
)
)
)
# Define server logic
server <- function(input, output, session) {
# No specific server logic needed for this layout
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
# Load in relevant libraries
library(statcanR)
library(dplyr)
library(tidyverse)
library(lubridate)
library(stringr)
library(scales)
library(formattable)
# Download Employment data from Statcan
df1 <- statcan_download_data("14-10-0355-02", "eng")
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
# Load in relevant libraries
library(statcanR)
library(dplyr)
library(tidyverse)
library(lubridate)
library(stringr)
library(scales)
library(formattable)
# Download Employment data from Statcan
df1 <- statcan_download_data("14-10-0355-02", "eng")
View(df1)
dff <- df1
install.packages("here")
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
library(shiny); runApp('app_homepage.R')
x<-c("sdf","sdf","sdf")
length(x)
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
runApp('app_homepage.R')
library(shiny); runApp('app_homepage.R')
